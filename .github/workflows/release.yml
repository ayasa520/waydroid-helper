name: Create GitHub Release

on:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Release tag name'
        required: true

env:
  PYTHON_VERSION: '3.x'
  CACHE_KEY_PREFIX: 'waydroid-helper'

jobs:
  build-linux:
    name: Build for Linux (${{ matrix.arch }})
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - arch: x64
            runner: ubuntu-latest
            artifact-name: linux-x64-dist
          - arch: arm64
            runner: ubuntu-24.04-arm
            artifact-name: linux-arm64-dist
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get upgrade -y
          sudo apt-get install desktop-file-utils software-properties-common -y
          sudo apt-get install libgtk-4-1 libgtk-4-dev libadwaita-1-dev libadwaita-1-0 libgirepository1.0-dev gcc libcairo2-dev pkg-config python3-dev gir1.2-gtk-4.0 gir1.2-adw-1 -y
          sudo apt-get install gettext ninja-build fakeroot attr libcap-dev libdbus-1-dev \
            libtool autotools-dev autoconf automake build-essential \
            python3-pip python3-venv \
            cmake golang-go perl \
            libusb-1.0-0-dev libpcre3-dev libfmt-dev \
            libprotobuf-dev protobuf-compiler \
            libbrotli-dev liblz4-dev libzstd-dev \
            libgtest-dev googletest \
            wget xz-utils -y

      - name: Set up Python virtual environment
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install meson pycairo "PyGObject==3.50.0" pywayland

      - name: Build package
        run: |
          source venv/bin/activate
          appimage/build.sh

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: AppDir/dist/

  github-release:
    name: GitHub Release
    needs: [build-linux]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      RELEASE_TAG: ${{ github.event.inputs.tag_name || github.ref_name }}

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: AppDir/dist/

      - name: Create GitHub Release
        run: |
          gh release create "$RELEASE_TAG" \
            --repo "${{ github.repository }}" \
            --notes ""

      - name: Upload dists to GitHub Release
        run: |
          gh release upload "$RELEASE_TAG" AppDir/dist/**/* \
            --repo "${{ github.repository }}"
