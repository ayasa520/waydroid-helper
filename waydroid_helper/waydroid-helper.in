#!@PYTHON@

# waydroid-helper.in
#
# Copyright 2024 rikka
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# SPDX-License-Identifier: GPL-3.0-or-later

import os
import sys
import signal
import locale
import gettext
import shutil
from argparse import ArgumentParser

VERSION = '@VERSION@'
BUILD_APPIMAGE = '@build_appimage@'
if BUILD_APPIMAGE == 'True':
    appdir = os.environ.get('APPDIR')
    pkgdatadir = os.path.join(appdir, '@pkgdatadir@'.lstrip('/'))
    os.environ['XDG_DATA_DIRS']=f"{os.environ.get('XDG_DATA_DIRS','')}:{os.path.join(appdir, '@datadir@'.lstrip('/'))}"
    os.environ['PATH']=f"{os.path.join(appdir, '@bindir@'.lstrip('/'))}:{os.environ.get('PATH','')}"
    cli_path = os.path.join(appdir, '@bindir@'.strip('/'),'waydroid-cli')
    dest_path = os.path.join('/tmp', 'waydroid-helper', 'waydroid-cli')
    os.makedirs(os.path.dirname(dest_path), exist_ok=True)
    shutil.copy(cli_path, dest_path) 
    os.environ['WAYDROID_CLI_PATH']=dest_path
    localedir = os.path.join(appdir, '@localedir@'.lstrip('/'))
else:
    pkgdatadir = '@pkgdatadir@'
    localedir = '@localedir@'
    os.environ['WAYDROID_CLI_PATH']=os.path.join('@bindir@','waydroid-cli')
project_name = '@project_name@'

sys.path.insert(1, pkgdatadir)
os.environ['PKGDATADIR'] = pkgdatadir
os.environ['PROJECT_NAME'] = project_name
signal.signal(signal.SIGINT, signal.SIG_DFL)
locale.bindtextdomain('waydroid-helper', localedir)
locale.textdomain('waydroid-helper')
# gettext.install('waydroid-helper', localedir)

gettext.bindtextdomain('waydroid-helper', localedir)
gettext.textdomain('waydroid-helper')
def start_gui():
    import gi

    gi.require_version('Adw', '1')
    gi.require_version("Gtk", "4.0")
    gi.require_version("GLib", "2.0")
    from gi.repository import Gio, Adw, Gtk, GLib
    resource = Gio.Resource.load(os.path.join(pkgdatadir, 'waydroid-helper.gresource'))
    resource._register()
    from waydroid_helper import main
    sys.exit(main.main(VERSION))

if __name__ == '__main__':
    parser = ArgumentParser()
    parser.add_argument("--start-mount", action="store_true", help="Start the mounting service")
    parser.add_argument("--start-monitor", action="store_true", help="Start the monitoring service")
    parser.add_argument("--version", action="version", version=f"%(prog)s {VERSION}")
    parser.add_argument(
        "--log-level",
        choices=['DEBUG', 'INFO', 'WARNING', 'ERROR', 'CRITICAL'],
        default='INFO',
        help="Set the logging level (default: INFO)"
    )
    args = parser.parse_args()

    os.environ['LOG_LEVEL'] = args.log_level.upper()

    if args.start_mount:
        from waydroid_helper.tools import start_monitor, start_mount
        start_mount()
    elif args.start_monitor:
        from waydroid_helper.tools import start_monitor, start_mount
        start_monitor()
    else:
        start_gui()

